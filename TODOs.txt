1.  Create stock service and inject it into stock ticker. (check)
2.  Stock service should return stock data (check)
3.  Create use cases
		1. Request a share by id (check) => already done by stock ticker
		2. Add share to portfolio (check) => already implemented by portfolio
		3. Update the portfolio in intervals (check)
4.  Store portfolio information in storage (json?) (check)
5.  Create simple WPF UI
		1. Template for account item (with name, change, quote etc...)
		2. Change color of item depending on change (check)
		3. Show dialog after searching a share and let user choose share and edit date / quote
		4. Use same dialog as above for editing an existing share
		5. Improve layout of search panel (better style, show error in color, show searching message)
		6. Add option to delete a share (via the dialog created in (5))
		7. Show animation if stop quote increases (check)
8.  Add notification in case the daily data of the share changes (check)
9.  Add notification if the rate is below the stop rate (check) => Android should create a badge or similar
10. Calculate other metrics
		1. Difference since buying date (check)
		2. Gain/loss since buying date (check)
		3. Difference of share compared to yesterday (check)
11. Fix thread crash when closing application

12. Sort by highest daily change
13. Create Android / Xamarin UI
14. Check other Stock API
15. Create Windows Universal Application
