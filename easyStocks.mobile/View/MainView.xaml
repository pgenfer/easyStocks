<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:xForms="clr-namespace:Syncfusion.ListView.XForms;assembly=Syncfusion.SfListView.XForms"
             xmlns:easyStocks1="clr-namespace:EasyStocks;assembly=easyStocks.common"
             xmlns:view1="clr-namespace:EasyStocks.View;assembly=easyStocks.mobile"
             xmlns:platform1="clr-namespace:EasyStocks.App.Platform;assembly=easyStocks.mobile"
             x:Class="EasyStocks.View.MainView"
             Title="{x:Static easyStocks1:EasyStocksStrings.Home}">
  <ContentPage.ToolbarItems>
    <ToolbarItem Icon="add_24.png"
                 Text="{x:Static easyStocks1:EasyStocksStrings.AddShare}"
                 Command="{Binding SearchCommand}"/>
    <ToolbarItem Icon="refresh_24.png"
                 Text="{x:Static easyStocks1:EasyStocksStrings.Refresh}"
                 Command="{Binding RefreshPortfolioCommand}"/>
  </ContentPage.ToolbarItems>
  <!-- 
  somehow Syncfusion ListView does not render when placed inside a content view
  so we have to put all controls inside this content page directly.
  -->
  <RelativeLayout
      VerticalOptions="FillAndExpand"
      HorizontalOptions="FillAndExpand">
    <xForms:SfListView
      Margin="0,16"
      RelativeLayout.WidthConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=1}"
      RelativeLayout.HeightConstraint="{ConstraintExpression Type=RelativeToParent, Property=Height, Factor=1}"
      ItemSize="72"
      AllowSwiping="True"
      SelectionMode="None"
      x:Name="PortfolioListView"
      BindingContext="{Binding Portfolio}"
      ItemsSource="{Binding Items}"
      ItemTemplate="{StaticResource AccountItemDataTemplate}"
      SwipeThreshold="30"
      SwipeOffset="{x:Static view1:MainView.SwipeOffset}"
      SwipeEnded="OnSwipeEnded"
      ItemTapped="OnPortfolioItemTapped">
      <xForms:SfListView.RightSwipeTemplate>
        <DataTemplate x:Name="DeleteSwipeTemplate">
          <Grid BackgroundColor="{x:Static platform1:CustomColors.FailureColor}"
                HorizontalOptions="Fill"
                VerticalOptions="Fill"
                HeightRequest="24"
                WidthRequest="24">
            <Image Source="delete_24.png"/>
          </Grid>
        </DataTemplate>
      </xForms:SfListView.RightSwipeTemplate>
    </xForms:SfListView>
    <!--
    problem with action button here is that it hides the last entry in the portfolio list
    so it is replaced with a toolbar button instead    
    <forms1:FloatingActionButton
      Style="{StaticResource FloatingActionButton}"
      Source="add_24.png"
      Command="{Binding SearchCommand}"
      RelativeLayout.XConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=1, Constant=-80}"
      RelativeLayout.YConstraint="{ConstraintExpression Type=RelativeToParent, Property=Height, Factor=1, Constant=-85}" />
    -->
    <ActivityIndicator
      Color="{x:Static platform1:CustomColors.DividerColor}"
      RelativeLayout.XConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=0.5,  Constant=-20 }"
      RelativeLayout.YConstraint="{ConstraintExpression Type=RelativeToParent, Property=Height, Factor=0.5, Constant=-20 }" 
      IsRunning="{Binding IsBusy}"/>
    <StackLayout
      Padding="5"
      RelativeLayout.XConstraint="{ConstraintExpression Type=RelativeToParent, Property=X, Factor=1,  Constant=0 }"
      RelativeLayout.YConstraint="{ConstraintExpression Type=RelativeToParent, Property=Y, Factor=1,  Constant=0 }"
      RelativeLayout.WidthConstraint="{ConstraintExpression Type=RelativeToParent,Property=Width,Factor=1}"
      BackgroundColor="{Binding Error.Severity,Converter={StaticResource SeverityToColor}}"
      IsVisible="{Binding Error.HasMessage}">
      <Label
        Text="{Binding Error.Message}"
        IsVisible="{Binding Error.HasMessage}"
        TextColor="{x:Static platform1:CustomColors.PrimaryTextLightColor}"
        HorizontalTextAlignment="Center"/>  
    </StackLayout>
  </RelativeLayout>
</ContentPage>